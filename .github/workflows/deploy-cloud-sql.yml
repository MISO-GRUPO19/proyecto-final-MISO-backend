name: Deploy Cloud SQL PostgreSQL

on:
  workflow_dispatch: # Permite la ejecución manual

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: your-gcp-project-id

      - name: Create Cloud SQL PostgreSQL instance (if not exists)
        run: |
          INSTANCE_EXISTS=$(gcloud sql instances list --filter="name=postgres" --format="value(name)")
          if [ -z "$INSTANCE_EXISTS" ]; then
            gcloud sql instances create postgres \
              --database-version=POSTGRES_16 \
              --tier=db-f1-micro \
              --region=us-central1 \
              --root-password=postgres \
              --storage-size=10GB \
              --assign-ip \
              --network=default \
              --authorized-networks=0.0.0.0/0 \
              --edition=enterprise \
              --availability-type=zonal
          else
            echo "Instance 'postgres' already exists, skipping creation."
          fi
      - name: Create Database (if not exists) Orders
        run: |
          DB_EXISTS=$(gcloud sql databases list --instance=postgres --filter="name=('orders')" --format="value(name)")
          if [ -z "$DB_EXISTS" ]; then
            gcloud sql databases create orders --instance=postgres
          else
            echo "Database 'orders' already exists, skipping creation."
          fi

      - name: Create Database (if not exists) Products
        run: |
            DB_EXISTS=$(gcloud sql databases list --instance=postgres --filter="name=('products')" --format="value(name)")
            if [ -z "$DB_EXISTS" ]; then
              gcloud sql databases create products --instance=postgres
            else
              echo "Database 'products' already exists, skipping creation."
            fi

      - name: Create Database (if not exists) Users
        run: |
            DB_EXISTS=$(gcloud sql databases list --instance=postgres --filter="name=('users')" --format="value(name)")
            if [ -z "$DB_EXISTS" ]; then
              gcloud sql databases create users --instance=postgres
            else
              echo "Database 'users' already exists, skipping creation."
            fi

      - name: Create Database (if not exists) Manufacturers
        run: |
            DB_EXISTS=$(gcloud sql databases list --instance=postgres --filter="name=('manufacturers')" --format="value(name)")
            if [ -z "$DB_EXISTS" ]; then
              gcloud sql databases create manufacturers --instance=postgres
            else
              echo "Database 'manufacturers' already exists, skipping creation."
            fi
            
      - name: Create Database (if not exists) Customers
        run: |
            DB_EXISTS=$(gcloud sql databases list --instance=postgres --filter="name=('customers')" --format="value(name)")
            if [ -z "$DB_EXISTS" ]; then
              gcloud sql databases create customers --instance=postgres
            else
              echo "Database 'customers' already exists, skipping creation."
            fi

      - name: Create Database (if not exists) AI
        run: |
            DB_EXISTS=$(gcloud sql databases list --instance=postgres --filter="name=('ai')" --format="value(name)")
            if [ -z "$DB_EXISTS" ]; then
              gcloud sql databases create ai --instance=postgres
            else
              echo "Database 'ai' already exists, skipping creation."
            fi

      - name: Create VPC Access Connector
        id: create_vpc_connector
        run: |
          # Verifica si el VPC Connector ya existe
          if ! gcloud compute networks vpc-access connectors describe orders-vpc-connector --region=us-central1 > /dev/null 2>&1; then
            echo "Creando VPC Connector..."
            gcloud compute networks vpc-access connectors create orders-vpc-connector \
              --region=us-central1 \
              --network=default \
              --range=10.8.0.0/28
          else
            echo "El VPC Connector ya existe. Saltando creación."
          fi