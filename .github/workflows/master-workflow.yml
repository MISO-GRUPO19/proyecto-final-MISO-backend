name: Master Workflow

on:
  push:
    branches:
      - feature/experimento3
  workflow_dispatch:

jobs:
  trigger_workflows:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Obtener todo el historial de commits

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Check if Cloud SQL instance exists
        id: check_cloudsql_instance
        run: |
          INSTANCE_EXISTS=$(gcloud sql instances list --filter="name=postgres" --format="value(name)")
          if [ -z "$INSTANCE_EXISTS" ]; then
            echo "cloudsql_instance_exists=false" >> $GITHUB_OUTPUT
          else
            echo "cloudsql_instance_exists=true" >> $GITHUB_OUTPUT
          fi

      - name: Trigger Deploy DB Workflow (if instance does not exist)
        if: steps.check_cloudsql_instance.outputs.cloudsql_instance_exists == 'false'
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: deploy-cloud-sql.yml
          token: ${{ secrets.PAT_TOKEN }}

      - name: Wait for Deploy DB Workflow (if instance does not exist)
        if: steps.check_cloudsql_instance.outputs.cloudsql_instance_exists == 'false'
        run: sleep 900

      - name: Check for changes in orders-management
        id: check_orders_management
        run: |
          git fetch
          if [ $(git rev-list --count HEAD) -gt 1 ]; then
            DIFF=$(git diff --name-only HEAD HEAD~1)
          else
            DIFF=$(git diff --name-only HEAD)
          fi
          echo "$DIFF"
          if echo "$DIFF" | grep -q "^orders-management/"; then
            echo "orders_management_changed=true" >> $GITHUB_OUTPUT
          else
            echo "orders_management_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Check for changes in products-management
        id: check_products_management
        run: |
          git fetch
          if [ $(git rev-list --count HEAD) -gt 1 ]; then
            DIFF=$(git diff --name-only HEAD HEAD~1)
          else
            DIFF=$(git diff --name-only HEAD)
          fi
          echo "$DIFF"
          if echo "$DIFF" | grep -q "^products-management/"; then
            echo "products_management_changed=true" >> $GITHUB_OUTPUT
          else
            echo "products_management_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Check for changes in authentications-management
        id: check_authentications_management
        run: |
          git fetch
          if [ $(git rev-list --count HEAD) -gt 1 ]; then
            DIFF=$(git diff --name-only HEAD HEAD~1)
          else
            DIFF=$(git diff --name-only HEAD)
          fi
          echo "$DIFF"
          if echo "$DIFF" | grep -q "^authentications-management/"; then
            echo "authentications_management_changed=true" >> $GITHUB_OUTPUT
          else
            echo "authentications_management_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Check if orders-management image exists
        id: check_orders_image
        run: |
          IMAGE_EXISTS=$(gcloud artifacts docker images list us-central1-docker.pkg.dev/proyecto-final-451719/proyecto/orders-management-image --filter="tags:latest" --format="value(name)")
          if [ -z "$IMAGE_EXISTS" ]; then
            echo "orders_image_exists=false" >> $GITHUB_OUTPUT
          else
            echo "orders_image_exists=true" >> $GITHUB_OUTPUT
          fi

      - name: Check if products-management image exists
        id: check_products_image
        run: |
          IMAGE_EXISTS=$(gcloud artifacts docker images list us-central1-docker.pkg.dev/proyecto-final-451719/proyecto/products-management-image --filter="tags:latest" --format="value(name)")
          if [ -z "$IMAGE_EXISTS" ]; then
            echo "products_image_exists=false" >> $GITHUB_OUTPUT
          else
            echo "products_image_exists=true" >> $GITHUB_OUTPUT
          fi

      - name: Check if authentications-management image exists
        id: check_authentications_image
        run: |
          IMAGE_EXISTS=$(gcloud artifacts docker images list us-central1-docker.pkg.dev/proyecto-final-451719/proyecto/authentications-management-image --filter="tags:latest" --format="value(name)")
          if [ -z "$IMAGE_EXISTS" ]; then
            echo "authentications_image_exists=false" >> $GITHUB_OUTPUT
          else
            echo "authentications_image_exists=true" >> $GITHUB_OUTPUT
          fi

      - name: Check if orders-management service exists
        id: check_orders_service
        run: |
          SERVICE_EXISTS=$(gcloud run services list --filter="metadata.name=orders-management-service" --format="value(metadata.name)")
          if [ -z "$SERVICE_EXISTS" ]; then
            echo "orders_service_exists=false" >> $GITHUB_OUTPUT
          else
            echo "orders_service_exists=true" >> $GITHUB_OUTPUT
          fi

      - name: Check if products-management service exists
        id: check_products_service
        run: |
          SERVICE_EXISTS=$(gcloud run services list --filter="metadata.name=products-management-service" --format="value(metadata.name)")
          if [ -z "$SERVICE_EXISTS" ]; then
            echo "products_service_exists=false" >> $GITHUB_OUTPUT
          else
            echo "products_service_exists=true" >> $GITHUB_OUTPUT
          fi

      - name: Check if authentications-management service exists
        id: check_authentications_service
        run: |
          SERVICE_EXISTS=$(gcloud run services list --filter="metadata.name=authentications-management-service" --format="value(metadata.name)")
          if [ -z "$SERVICE_EXISTS" ]; then
            echo "authentications_service_exists=false" >> $GITHUB_OUTPUT
          else
            echo "authentications_service_exists=true" >> $GITHUB_OUTPUT
          fi

      - name: Trigger Build and Deploy Workflow for Orders Management
        if: steps.check_orders_management.outputs.orders_management_changed == 'true' || steps.check_orders_image.outputs.orders_image_exists == 'false' || steps.check_orders_service.outputs.orders_service_exists == 'false'
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: build-and-deploy-orders.yml
          token: ${{ secrets.PAT_TOKEN }}

      - name: Trigger Build and Deploy Workflow for Products Management
        if: steps.check_products_management.outputs.products_management_changed == 'true' || steps.check_products_image.outputs.products_image_exists == 'false' || steps.check_products_service.outputs.products_service_exists == 'false'
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: build-and-deploy-products.yml
          token: ${{ secrets.PAT_TOKEN }}
        
      - name: Trigger Build and Deploy Workflow for Authentications Management
        if: steps.check_authentications_management.outputs.authentications_management_changed == 'true' || steps.check_authentications_image.outputs.authentications_image_exists == 'false' || steps.check_authentications_service.outputs.authentications_service_exists == 'false'
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: build-and-deploy-authentications.yml
          token: ${{ secrets.PAT_TOKEN }}